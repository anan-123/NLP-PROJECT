# -*- coding: utf-8 -*-
"""NLP Project_Fluency.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QnN-zjzkcbMlQwr6Ao0vrXDEz8WynI4m
"""

# from google.colab import drive
# drive.mount('/content/drive')
# 
# !pip install xlsxwriter
# !pip install textstat
import textstat

import pandas as pd

# df = pd.read_excel("/content/drive/My Drive/processed_dataset.xlsx", "Sheet1", header=None)
df = pd.read_excel("../dataset/processed_dataset.xlsx", "Sheet1", header=None)
len(df)

def getIndexScore(text, type):
    if(type=="linsear_write_formula"):
        return textstat.linsear_write_formula(text)
    if(type=="gunning_fog"):
        return textstat.gunning_fog(text)
    if(type=="coleman_liau_index"):
        return textstat.coleman_liau_index(text)
    if(type=="dale_chall_readability_score"):
        return textstat.dale_chall_readability_score(text)
    if(type=="automated_readability_index"):
        return textstat.automated_readability_index(text)
    return

data = []
for idx, row in df.iterrows():
    row_text = str(row.values[0])
    row_score = []
    row_score.append(getIndexScore(row_text, "automated_readability_index"))
    row_score.append(getIndexScore(row_text, "dale_chall_readability_score"))
    row_score.append(getIndexScore(row_text, "coleman_liau_index"))
    row_score.append(getIndexScore(row_text, "linsear_write_formula"))
    row_score.append(getIndexScore(row_text, "gunning_fog"))
    avg_score = sum(row_score)/len(row_score)
    data.append([row_text, row_score[0], row_score[1], row_score[2], row_score[3], row_score[4], avg_score])

new_df = pd.DataFrame(data)
new_df.columns = ['text', 'score1', 'score2', 'score3', 'score4', 'score5', 'avg_score']
new_df.head()

index_key = [
["1", "automated_readability_index"],
["2", "dale_chall_readability_score"],
["3", "coleman_liau_index"],
["4", "linsear_write_formula"],
["5", "gunning_fog"]
]
tmp_df = pd.DataFrame(index_key)
# writer = pd.ExcelWriter("output.xlsx", engine="xlsxwriter")
tmp_df.to_excel("output.xlsx", sheet_name="key", index=False)
# writer.save()

# save to excel sheet
writer = pd.ExcelWriter('output.xlsx', engine='xlsxwriter')
new_df.to_excel(writer, "Baseline_scores")
tmp_df.to_excel(writer, "Index keys")
writer.save()

# !cp output.xlsx "/content/drive/My Drive/"
